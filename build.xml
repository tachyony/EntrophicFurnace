<project name="EntrophicFurnace" default="main">
	<property environment="env"/>
	<!-- Properties -->
	<dirname property="imported.basedir" file="${ant.file.EntrophicFurnace}"/>
	<property name="build.dir" value="build"/>
	<property name="src.dir" value="${imported.basedir}"/>
	<property name="resources.dir" value="${imported.basedir}/resources"/>
	<property name="download.dir" value="download"/>
	<property name="classes.dir" value="${build.dir}/classes"/>
	<property name="jar.dir" value="bin"/>
	<property name="forge.buildnum" value="738" />
	<property name="forge.version" value="1.5.2-7.8.1.${forge.buildnum}" />
	<property name="forge.dir" value="${build.dir}/forge"/>
	<property name="forge.url" value="http://files.minecraftforge.net/minecraftforge/minecraftforge-src-${forge.version}.zip" />
	<property name="mcp.dir" value="${forge.dir}/mcp"/>
	<property name="mcpsrc.dir" value="${mcp.dir}/src"/>
	<property name="mc.version" value="1.5.2"/>
	<property name="entrophicfurnace.name" value="EntrophicFurnace"/>
	<property name="forge.name" value="minecraftforge-src-${forge.version}.zip"/>
	<property name="libs" value="C:/stuff"/>
	<property name="lib.dir" value="lib"/>
	<property name="ue.name" value="UniversalElectricity_v1.4.0.89.zip"/>
	<property name="project.version" value="1.0.1"/>
	<available property="forge-exists" file="${download.dir}/minecraftforge-src-${forge.version}.zip" />
	<available property="ue-exists" file="${lib.dir}/${ue.name}"/>
	<available file="${src.dir}/.git" type="dir" property="git.present"/>
	<condition property="should-download-ant-contrib">
		<or>
			<available file="${download.dir}/ant-contrib/ant-contrib-1.0b3.jar"/>
			<available file="${download.dir}/minecraftforge-src-${forge.version}.zip"/>
		</or>
	</condition>
	<condition property="out-of-date">
		<not>
			<and>
				<isset property="forge-exists"/>
				<available file="${mcpsrc.dir}"/>
			</and>
		</not>
	</condition>
	
	<mkdir dir="${download.dir}"/>

	<!-- Targets -->
	
	<!-- Clear build directory -->
	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>
	
	<!-- Set full version -->
	<target name="initialize-version" depends="version-provided,version-not-provided">
		<property name="project.version.full" value="${project.version}.${build.number}"/>
	</target>
	
	<!-- Set unknown build number -->
	<target name="version-not-provided" unless="env.BUILD_NUMBER">
		<property name="build.number" value="unknown"/>
	</target>
	
	<!-- Set build number from environment -->
	<target name="version-provided" if="env.BUILD_NUMBER">
		<property name="build.number" value="${env.BUILD_NUMBER}"/>
	</target>
	
	<!-- Download necessary files -->
	<target name="download-files" depends="download-forge"/>

	<!-- Download forge (if it doesn't exist) -->
	<target name="download-forge" depends="download-ant-contrib" unless="forge-exists">
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="${download.dir}/ant-contrib/ant-contrib-1.0b3.jar"/>
				<fileset dir="${download.dir}/ant-contrib/lib">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</taskdef>
		<echo message="Downloading forge... " />
		<get src="${forge.url}" dest="${download.dir}/minecraftforge-src-${forge.version}.zip" />
	</target>
	
	<!-- Setup mcp and forge -->
	<target name="setup" depends="download-files" if="out-of-date">
		<delete dir="${forge.dir}" failonerror="false"/>
		<unzip dest="${forge.dir}/.." src="${download.dir}/${forge.name}"/>
		<!-- Fix executable permissions -->
		<chmod dir="${forge.dir}" perm="ugo+rx" includes="**.sh"/>
		<!-- Install forge -->
		<exec dir="${forge.dir}" executable="cmd" osfamily="windows">
			<arg line="/c install.cmd"/>
		</exec>
		<exec dir="${forge.dir}" executable="sh" osfamily="unix">
			<arg value="install.sh"/>
		</exec>
	</target>
	
	<target name="get-ue" unless="ue-exists">
		<copy file="${libs}/${ue.name}" todir="${lib.dir}" verbose="true"/>
	</target>
	<target name="setup-ue" depends="get-ue">
		<unzip dest="${mcpsrc.dir}/minecraft" src="${lib.dir}/${ue.name}"/>
	</target>
	
	<target name="clean-src">
		<delete verbose="true">
			<fileset dir="${mcpsrc.dir}/minecraft">
				<present present="both" targetdir="${src.dir}/common" />
			</fileset>
		</delete>
	</target>
	
	<target name="copy-src" depends="clean-src,initialize-version,setup-ue">
		<!-- Copy sources -->
		<copy todir="${mcpsrc.dir}/minecraft" verbose="true">
			<fileset dir="${src.dir}/ef_common"/>
			<filterset>
				<filter token="VERSION" value="${project.complete.version}" />
				<filter token="BUILD_NUMBER" value="${build.number}" />
			</filterset>
		</copy>
	</target>
	
	<target name="compile" depends="initialize-version,setup,copy-src">
		<mkdir dir="${classes.dir}"/>
		<delete includeemptydirs="true">
			<fileset dir="${classes.dir}" includes="**/*"/>
		</delete>
		<!-- Recompile -->
		<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
			<arg line="/c recompile.bat"/>
		</exec>
		<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
			<arg value="recompile.sh"/>
		</exec>
		<!-- Check for failure -->
		<fail message="MCP failed to build">
			<condition>
				<resourcecontains resource="${mcp.dir}/logs/client_compile.log" substring="error:"/>
			</condition>
		</fail>
	</target>

	<target name="reobf" depends="compile">
		<!-- Reobfuscate -->
		<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
			<arg line="/c reobfuscate_srg.bat"/>
		</exec>
		<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
			<arg value="reobfuscate_srg.sh"/>
		</exec>
		<!-- Copy classes -->
		<copy todir="${classes.dir}">
			<fileset dir="${mcp.dir}/reobf/minecraft">
				<exclude name="appeng"/>
			</fileset>
		</copy>
		<!-- Copy resources -->
		<copy todir="${classes.dir}">
			<fileset dir="${resources.dir}">
				<exclude name="build.xml"/>
			</fileset>
		</copy>
		<copy file="${src.dir}/mcmod.info" todir="${classes.dir}"/>
		<!-- Reset src dir to post-forge-install state -->
		<delete dir="${mcpsrc.dir}/minecraft/entrophicfurnace"/>
	</target>
	
	<!-- Package the compiled files -->
	<target name="package" depends="reobf">
		<mkdir dir="${jar.dir}"/>
		<delete includeemptydirs="true">
			<fileset dir="${jar.dir}" includes="**/*"/>
		</delete>
		<property name="jar.file.name" value="${jar.dir}/${entrophicfurnace.name}-${mc.version}-${project.version.full}.jar"/>
		<jar destfile="${jar.file.name}" basedir="${classes.dir}"/>
	</target>

	<!-- Default target to run -->
	<target name="main" depends="package"/>
	
	<target name="download-ant-contrib" unless="should-download-ant-contrib">
		<echo message="Getting: ant-contrib"/>
		<mkdir dir="${download.dir}/tmp"/>
		<mkdir dir="${download.dir}/ant-contrib/lib" />
		<get src="http://sourceforge.net/projects/ant-contrib/files/ant-contrib/1.0b3/ant-contrib-1.0b3-bin.zip/download" dest="${download.dir}/tmp/ant-contrib-1.0b3-bin.zip"/>
		<get src="http://archive.apache.org/dist/commons/codec/binaries/commons-codec-1.6-bin.zip" dest="${download.dir}/tmp/commons-codec-1.6-bin.zip"/>
		<unzip src="${download.dir}/tmp/ant-contrib-1.0b3-bin.zip" dest="${download.dir}"/>
		<unzip src="${download.dir}/tmp/commons-codec-1.6-bin.zip" dest="${download.dir}/tmp"/>
		<move todir="${download.dir}/ant-contrib/lib">
		<fileset file="${download.dir}/tmp/commons-codec-1.6/commons-codec-1.6.jar"/>
		</move>
		<!-- Delete useless files -->
		<delete dir="${download.dir}/ant-contrib/docs"/>
		<delete dir="${download.dir}/tmp"/>

	</target>
</project>